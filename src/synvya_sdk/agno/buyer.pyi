import logging
from logging import Logger
from typing import ClassVar, Optional

from agno.agent import AgentKnowledge
from agno.knowledge.json import JSONKnowledgeBase
from agno.tools import Toolkit
from synvya_sdk import NostrClient, Product, Profile, Stall

class BuyerTools(Toolkit):
    logger: ClassVar[Logger]
    sellers: set[Profile]
    relay: str
    _nostr_client: NostrClient

    def __init__(
        self,
        knowledge_base: AgentKnowledge,
        relay: str,
        private_key: str,
    ) -> None: ...
    def download_all_sellers(self) -> str: ...
    def download_products_from_seller(self, public_key: str) -> str: ...
    def download_sellers_from_marketplace(self, public_key: str, name: str) -> str: ...
    def download_stalls_from_seller(self, public_key: str) -> str: ...
    def get_all_products_from_knowledge_base(self) -> str: ...
    def get_all_sellers_from_knowledge_base(self) -> str: ...
    def get_all_stalls_from_knowledge_base(self) -> str: ...
    def get_own_profile(self) -> str: ...
    def get_products_from_knowledge_base_by_category(self, category: str) -> str: ...
    def get_relay(self) -> str: ...
    def purchase_product(self, product: str) -> str: ...
    def _get_product_from_kb(self, product_name: str) -> Product: ...
    def _store_profile_in_kb(self, profile: Profile) -> None: ...
    def _store_product_in_kb(self, product: Product) -> None: ...
    def _store_stall_in_kb(self, stall: Stall) -> None: ...
